version: '2.1'
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
  run-lint:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            sudo chmod +x /bin/hadolint
      - run:
          name: Run Lint
          command: |
            hadolint Dockerfile
  docker-build:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout

      - setup_remote_docker:
          version: 19.03.13

      - run:
          name: Build Docker Image
          command: |
            export IMAGE_NAME=capstone-project
            docker build -t proj4vg/$IMAGE_NAME .
  
  docker-push:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Push Docker Image to Docker Hub yes
          command: |
            export IMAGE_NAME=capstone-project
            docker build -t proj4vg/$IMAGE_NAME .
            docker login -u varungosain -p Ironpen566$ docker.io
            docker push proj4vg/$IMAGE_NAME
     
  deploy-application:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployments/deployment.yml
          resource-name: deployments/capstone-project

  test-cluster:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
            kubectl get pods
            kubectl describe pods
            kubectl get nodes
            kubectl get deployment
            kubectl get services -o wide
          name: Test cluster
             
workflows:
  deployment:
    jobs:
      - run-lint
      - docker-build
      - docker-push:
          requires:
            - docker-build
      - aws-eks/create-cluster:
          cluster-name: capstone-project
          requires:
            - docker-push
      - deploy-application:
          cluster-name: capstone-project
          requires:
            - aws-eks/create-cluster
      - test-cluster:
          cluster-name: capstone-project
          requires:
            - aws-eks/create-cluster
            - deploy-application
      - aws-eks/delete-cluster:
          cluster-name: capstone-project
          requires:
            - test-cluster
